<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Usage</title>
		<author email="a.thaveau@free.fr">Alexis Thaveau</author>
	</properties>
	<body>
		<section name="Introduction">
			<p>
				This plugin, based on ESIGate API, generate a set of HTML pages
				with reusable components.
			</p>
			<p>
				<ul>
					<li>Pages in folder src/main/resources/pages can use <a href="/aggregator.html">aggregator syntax</a>
						in order to include template or block</li>
					<li>Modules in folder src/main/resources/modules are the template
						and block to reuse </li>
				</ul>


			</p>
		</section>
		<section name="Generate project with archetype">
			<p>
				The simplest way is to generate your project with the archetype :
				<source><![CDATA[
mvn archetype:generate 
    -DarchetypeRepository=http://www.esigate.org/maven/repository 
    -DarchetypeArtifactId=webassembletool-staticassembly-archetype
    -DarchetypeGroupId=net.sourceforge.webassembletool.maven  -DarchetypeVersion=RELEASE
]]></source>
			</p>
		</section>
		<section name="Configuring the plugin in an existing project">
			<p>				You can also add this plugin to an existing project.</p>
				<p>
				Add this plugin to the pom.xml :
			</p>

			<source><![CDATA[
<project>
  [...]
  <build>
    [...]
    <plugins>
       <plugin>
          <groupId>net.sourceforge.webassembletool.maven</groupId>
          <artifactId>webassembletool-staticassembly-plugin</artifactId>
       </plugin>
       [...]
</project>
]]></source>

			<p>
				And add ESIGate repository as plugin repository
				</p>
			<source><![CDATA[
<pluginRepositories>
    <pluginRepository>
        <id>esigate-repository</id>
        <name>ESIGate repository</name>
        <url>http://www.esigate.org/maven/repository</url>
    </pluginRepository>
</pluginRepositories>
]]></source>

			<p>
				Create the following directory structure
				<source><![CDATA[
|--src/main/resources/
                     |-- modules/
                     |-- pages/
]]></source>
			</p>
		</section>


<section name="Advanced Configuration">

	<subsection name="Bind to build lifecyle">
	<p>To bind the plugin to the standard build lifecycle : </p>	
	<source><![CDATA[
<plugin>
	<groupId>net.sourceforge.webassembletool.maven</groupId>
	<artifactId>webassembletool-staticassembly-plugin</artifactId>
	<version>${currentVersion}</version>
	<executions>
		<execution>
			<phase>process-resources</phase>
			<goals>
				<goal>assembly</goal>
			</goals>
		</execution>
	</executions>
	<configuration>
		<charset>UTF-8</charset>
	</configuration>
</plugin>	
]]></source>
</subsection>

<subsection name="Filtering page before assembly">
<p>
Resources files (pages, modules) can be filtered before plugin execution :
</p>
<source><![CDATA[
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.html</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.html</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
		</resources>
]]></source>			
	
		</subsection>
		

</section>
<section name="Escaping taglib">
<p>
Suppose you need to generate html with esigate directives (includetemplate, beginparam, ...) 
</p>
<source><![CDATA[
 <!--$beginparam$title$--><title>Title to be replaced</title><!--$endparam$title$--> 
]]></source>

<p>
You must "escape" thoses directives in html sources (pages or modules) :
</p>
<source><![CDATA[
 <!--#$beginparam$title$--><title>Title to be replaced</title><!--#$endparam$title$-->  
]]></source>
</section>

  
	</body>
</document>