<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Advanced Usage</title>
	</properties>
	<body>
		<section name="Configuring the plugin in an existing project">
			<p>You can also add this plugin to an existing project.</p>
			<p>
				Add this plugin to the pom.xml :
			</p>

			<source><![CDATA[
<plugins>
	[...]
	<plugin>
		<groupId>org.fast.maven.plugin</groupId>
		<artifactId>fast-maven-plugin</artifactId>
		<version>${currentVersion}</version>
		<configuration>
			<charset>UTF-8</charset>
		</configuration>
	</plugin>
	[...]
</plugins>
]]></source>

			<p>
				And add FAST repository as plugin repository
				</p>
			<source><![CDATA[
<pluginRepositories>
	<pluginRepository>
		<id>smile-github-repository</id>
		<name>Smile Github repository</name>
		<url>http://smile-sa.github.com/maven-repository/releases</url>
	</pluginRepository>
</pluginRepositories>
]]></source>
			<p>
				Create the following directory structure
				<source><![CDATA[
|--src/main/resources/
	|-- modules/
	|-- pages/
]]></source>
			</p>
		</section>
		<section name="Bind to build lifecyle">
			<p>To bind the plugin to the standard build lifecycle : </p>
			<source><![CDATA[
<plugin>
	<groupId>org.fast.maven.plugin</groupId>
	<artifactId>fast-maven-plugin</artifactId>
	<version>${currentVersion}</version>
	<executions>
		<execution>
			<phase>process-resources</phase>
			<goals>
				<goal>assembly</goal>
			</goals>
		</execution>
	</executions>
	<configuration>
		<charset>UTF-8</charset>
	</configuration>
</plugin>	
]]></source>
		</section>
		<section name="Filtering page before assembly">
			<p>
				Resources files (pages, modules) can be filtered before plugin
				execution :
			</p>
			<source><![CDATA[
<resources>
	<resource>
		<directory>src/main/resources</directory>
		<filtering>true</filtering>
		<includes>
			<include>**/*.html</include>
			<include>**/*.xml</include>
		</includes>
	</resource>
	<resource>
		<directory>src/main/resources</directory>
		<filtering>false</filtering>
		<excludes>
			<exclude>**/*.html</exclude>
			<exclude>**/*.xml</exclude>
		</excludes>
	</resource>
</resources>
]]></source>
		</section>
		<section name="Escaping taglib">
			<p>
				Suppose you need to generate html with esigate directives
				(includetemplate,
				beginparam, ...) 
			</p>
			<source><![CDATA[
 <!--$beginparam$title$--><title>Title to be replaced</title><!--$endparam$title$--> 
]]></source>

			<p>
				You must "escape" thoses directives in html sources (pages or
				modules)
				:
			</p>
			<source><![CDATA[
 <!--#$beginparam$title$--><title>Title to be replaced</title><!--#$endparam$title$-->  
]]></source>
		</section>
	</body>
</document>
